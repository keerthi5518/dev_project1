# Structr global configuration file
#
# Place this file in the base.path directory.
#
# Please make sure this file is not publicly accessible
#


# General application-wide settings
#
# The title shown at start-up
application.title = Structr REST server
#
# Listener address. Set this to the real ip address or localhost to restrict access,
# or to 0.0.0.0 to make this instance accessible over all ip addresses and hostnames
application.host = 0.0.0.0
#
# Listener port for HTTP access REST and web service
application.http.port = 8082
#
# URL base path of REST server
application.rest.path = /structr/rest
#
# Listener port of built-in FTP server
application.ftp.port = 8021
#
# HTTPS settings
# run this command to create a selfsigned certificate:
# 'keytool -genkey -keyalg RSA -alias selfsigned -keystore [KEYSTORE_FILE] -storepass [KEYSTORE_PASSWORD] -validity 360 -keysize 2048'
#
# application.https.enabled = true
# application.https.port = 8083
# application.keystore.path = [KEYSTORE_FILE]
# application.keystore.password = [KEYSTORE_PASSWORD]
#
#
# Paths
base.path = .
database.path = ./db
files.path = ./files
log.database.path = ./logDb.dat
tmp.path = /tmp
#
# Configuration class providing custom schema classes
configuration.provider = org.structr.module.JarConfigurationProvider
#
# Configure services to automatically run at start-up
configured.services = NodeService AgentService CronService SchemaService LogService HttpService
#
# Support migration from 0.8.x and earlier versions
#NodeService.migration = true
#
# Superuser username and password
# You have to set a superuser username and password in order to use
# administration and maintenance tools
superuser.username = superadmin
superuser.password =
#
# Indent JSON
json.indentation = true
#
# Neo4j shell on port 1337
neo4j.shell.enabled = true
#
# E-Mail settings: Set host and port of an MTA Structr will use to send e-mails
smtp.host = localhost
smtp.port = 25
#
# Ports for low-level binary protocols
#tcp.port = 54555
#udp.port = 57555
#


# Servlets
#
# Available servlets
HttpService.servlets = JsonRestServlet CsvServlet
#
# JSON/REST servlet
JsonRestServlet.authenticator = org.structr.core.auth.SuperUserAuthenticator
JsonRestServlet.class = org.structr.rest.servlet.JsonRestServlet
JsonRestServlet.defaultview = public
JsonRestServlet.outputdepth = 3
JsonRestServlet.path = /structr/rest/*
JsonRestServlet.resourceprovider = devops.CustomResourceProvider
JsonRestServlet.user.autocreate = true
JsonRestServlet.user.class = org.structr.core.entity.User
#
# CSV servlet
CsvServlet.authenticator = org.structr.core.auth.SuperUserAuthenticator
CsvServlet.class = org.structr.rest.servlet.CsvServlet
CsvServlet.defaultview = public
CsvServlet.outputdepth = 3
CsvServlet.path = /structr/csv/*
CsvServlet.resourceprovider = devops.CustomResourceProvider
CsvServlet.user.autocreate = false
CsvServlet.user.class = org.structr.core.entity.User
#


# Logging
#
# Set to true to enable full request logging including request body
log.requests = false
log.name = structr-yyyy_mm_dd.request.log
#
# Log code generated for custom schema
NodeExtender.log = true
#
